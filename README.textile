h1. Generate configuration for ZooKeeper ensemble

"http://hadoop.apache.org/zookeeper/":http://hadoop.apache.org/zookeeper/

h2. Summary

zkconf.py will generate all of the configuration needed to run a ZooKeeper ensemble. Currently the assumption is that this tool will mainly be used to do testing, therefore the conf files are using localhost for all servers.

h2. Requirements

* Python
* "Cheetah":http://www.cheetahtemplate.org templating package are necessary to run this
** On ubuntu "sudo apt-get install python-cheetah"

before using the first time (or on update) run the following command

cheetah compile *.tmpl

h2. Usage

zkconf.py [options] zookeeper_dir output_dir

Where zookeeper_dir is the location of your ZooKeeper trunk (zkconf copies the jars/confs from this directory into the output_dir to make your life easier). And output_dir is the directory to which we will output the generated files (assumption is that this is a non-existent directory - ie zkconf will create it)

example of typical use; 9 server quorum:

bq. zkconf.py --count 9 ~/zookeeper_trunk test9servers

bq. zkconf.py --servers "host1.com,host2.com,168.1.1.1" ~/zookeeper_trunk test3servers

example of using weights/groups (only for flex quorum, not typical); 9 servers with 3 groups

bq. zkconf.py -c 9 --weights="1,1,1,1,1,0,0,0,0" --groups="1:2:3:4:5,6:7,8:9" ~/dev/workspace/gitzk testflexquroum

Options:
  -h, --help            show this help message and exit
  -c COUNT, --count=COUNT
                        ensemble size
  --clientportstart=CLIENTPORTSTART
                        first client port
  --quorumportstart=QUORUMPORTSTART
                        first quorum port
  --electionportstart=ELECTIONPORTSTART
                        first election port
  --weights=WEIGHTS     comma separated list of weights for each server (flex
                        quorum only)
  --groups=GROUPS       comma separated list of groups (flex quorum only)

* cli.sh "server:port,server:port,..." - open a client to the server list
* status.sh - status of each of the servers (prints leader | follower if active)
* start.sh - start the ensemble (logs are output to the respective server subdir, localhost only)
* stop.sh - stop the ensemble (localhost only)
